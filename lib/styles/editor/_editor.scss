@mixin show-placeholder {
  content: attr(data-placeholder);
  float: left;
  color: #ced4da;
  pointer-events: none;
  height: 0;
}

.neeto-editor {
  max-width: 100% !important;
  border-radius: var(--neeto-ui-rounded);
  white-space: pre-wrap;
  padding: 16px;
  color: rgb(var(--neeto-ui-gray-800));
  background-color: rgb(var(--neeto-ui-white));

  &:focus {
    outline: none;
  }

  a {
    pointer-events: none;
  }

  mark {
    background: rgb(var(--neeto-ui-pastel-green));
    border-radius: var(--neeto-ui-rounded-sm);
    padding: 0px 4px;
    color: inherit;
  }

  [data-variable] {
    display: inline-flex;
    color: rgb(var(--neeto-ui-gray-700));
    background-color: rgb(var(--neeto-ui-gray-200));
    border-radius: var(--neeto-ui-rounded-sm);
    line-height: 1;
    padding: 4px 6px;
  }

  .ProseMirror-separator {
    display: none;
  }

  &.fixed-menu-active {
    border: thin solid rgb(var(--neeto-ui-gray-300));
    border-top: none;
    border-bottom: none;
    border-radius: 0px 0px 0px 0px;
  }

  .is-empty {
    position: relative;
  }

  &.placeholder-active {
    .is-editor-empty:first-child::before {
      @include show-placeholder;
    }
  }

  hr {
    margin: 8px 0;
  }

  .ProseMirror-selectednode {
    outline: 3px solid rgb(var(--neeto-ui-pastel-blue));
  }

  .has-focus {
    background: var(--focus-background-color);
    transition: background-color 200ms ease;
  }

  @extend .neeto-editor-content;

}

.neeto-editor-character-count {
  padding: 4px;
  color: rgb(var(--neeto-ui-gray-600));
  font-size: 12px;
  text-align: right;
}

.neeto-editor-error {
  color: rgb(var(--neeto-ui-error-500));
  border-width: 1px;
  border-color: rgb(var(--neeto-ui-error-500));
  border-radius: var(--neeto-ui-rounded);
}

.neeto-editor-error:focus-within {
  border-color: rgb(var(--neeto-ui-error-600));
}
